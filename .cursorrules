{
  "project": {
    "name": "Portfolio-api",
    "description": "API backend développée avec Node.js, Express, MongoDB et TypeScript."
  },
  "codingStandards": {
    "language": "TypeScript",
    "framework": "Express",
    "styleGuide": "Airbnb",
    "useStrict": true,
    "lintingTools": [
      "ESLint"
    ],
    "formattingTools": [
      "Prettier"
    ]
  },
  "fileStructure": {
    "controllers": "src/controllers",
    "models": "src/models",
    "routes": "src/routes",
    "middlewares": "src/middlewares",
    "services": "src/services",
    "config": "src/config",
    "utils": "src/utils"
  },
  "namingConventions": {
    "controllers": "kebab-case",
    "models": "kebab-case",
    "routes": "kebab-case",
    "middlewares": "kebab-case",
    "services": "kebab-case",
    "config": "kebab-case",
    "utils": "kebab-case",
    "variables": "camelCase",
    "functions": "camelCase",
    "constants": "UPPER_SNAKE_CASE"
  },
  "bestPractices": [
    "Utiliser des contrôleurs pour gérer la logique des routes.",
    "Séparer la logique métier en services.",
    "Gérer les erreurs avec des middlewares dédiés.",
    "Valider les entrées utilisateur.",
    "Utiliser Mongoose pour la modélisation des données.",
    "Écrire des tests unitaires pour les services et les contrôleurs.",
    "Suivre les principes SOLID pour une architecture maintenable."
  ],
  "dependencies": [
    {
      "name": "express",
      "version": "^4.17.1"
    },
    {
      "name": "mongoose",
      "version": "^6.0.0"
    },
    {
      "name": "cors",
      "version": "^2.8.5"
    },
    {
      "name": "dotenv",
      "version": "^10.0.0"
    }
  ],
  "scripts": {
    "start": "ts-node-dev src/index.ts",
    "build": "tsc -p .",
    "lint": "eslint 'src/**/*.ts'",
    "test": "jest"
  },
  "environmentVariables": {
    "PORT": 3000,
    "MONGODB_URI": "mongodb://localhost:27017/portfolio"
  }
}
